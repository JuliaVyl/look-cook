{"version":3,"sources":["reportWebVitals.ts","store/favorites/types.ts","store/favorites/reducer.ts","store/recipes/types.ts","store/recipes/reducer.ts","store/user/types.ts","store/user/reducer.ts","store/reducer.ts","store/store.ts","store/user/actions.ts","assets/icons/search.svg","assets/icons/close.svg","components/sign-up/Signup.tsx","store/recipes/actions.ts","components/navbar/Navbar.tsx","components/profile/Profile.tsx","assets/icons/favorite.svg","assets/icons/add-favorite.svg","store/favorites/actions.ts","components/recipe-item-more/RecipeItemFull.tsx","components/recipe-item/RecipeItem.tsx","components/favorites-list/Favorites.tsx","components/categories/Categories.tsx","components/profile-page/ProfilePage.tsx","components/food-categories/food_data.ts","components/food-categories/FoodCategories.tsx","components/recipes-list/Recipes.tsx","components/app/App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","FETCH_SHOW_ALL_FAVORITES_REQUEST","FETCH_SHOW_ALL_FAVORITES_SUCCESS","FETCH_SHOW_ALL_FAVORITES_FAILURE","FETCH_FAVORITE_RECIPE_REQUEST","FETCH_FAVORITE_RECIPE_SUCCESS","FETCH_FAVORITE_RECIPE_FAILURE","FETCH_UNFAVORITE_RECIPE_REQUEST","FETCH_UNFAVORITE_RECIPE_SUCCESS","FETCH_UNFAVORITE_RECIPE_FAILURE","initialState","favorites","status","loading","error","FETCH_ALL_RECIPES_REQUEST","FETCH_ALL_RECIPES_SUCCESS","FETCH_ALL_RECIPES_FAILURE","FILTER_RECIPES_BY_CATEGORY","FILTER_RECIPES_BY_TEXT","recipes","filterText","filterCategory","LOAD_USER","user","reducer","combineReducers","state","action","type","payload","trim","toLowerCase","category","devTools","window","__REDUX_DEVTOOLS_EXTENSION__","f","store","createStore","compose","applyMiddleware","thunk","userLoaded","Signup","closePannel","auth","firebase","useAuthState","className","src","closeIcon","alt","onClick","provider","GoogleAuthProvider","signInWithPopup","to","recipesLoaded","fetchRecipes","dispatch","a","db","firestore","recipesRef","collection","get","snapshot","empty","console","log","docs","map","doc","id","data","Navbar","useState","value","setValue","showSingIn","setSingIn","showSearchPannel","setSearchPannel","showSearch","setSearch","useDispatch","searchIcon","onSubmit","e","preventDefault","autoComplete","placeholder","onChange","target","Profile","photoURL","displayName","showAllFavoritesLoaded","fetchShowAllFavorites","userId","favoritesRef","where","favoriteRecipeRequested","unfavoriteRecipeRequested","RecipeItemFull","recipe","closeFullRecipe","image","title","time","serves","level","description","RecipeItem","favorite","showFullRecipe","setFullRecipe","alert","setAlert","useSelector","addFavorite","favId","email","add","favoriteId","resp","removeFavorite","forEach","delete","fetchDeleteFavorite","addFavIcon","setTimeout","favIcon","Favorites","allRecipes","useEffect","useMemo","filter","rec","find","el","length","style","fontSize","categories","Categories","activeCategory","setCategory","categoryClass","currentCategory","signOut","ProfilePage","food","FoodCategories","filterRecipesByCategory","Recipes","includes","isFavorite","App","name","photoUrl","path","component","exact","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.73d7006b.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export interface Favorite {\r\n  id: string;\r\n  favoriteId: string;\r\n  user: string;\r\n}\r\n\r\nexport interface FavoritesState {\r\n  favorites: Favorite[];\r\n  status: boolean;\r\n  loading: boolean;\r\n  error: any;\r\n}\r\n\r\n// SHOW ALL FAVORITE RECIPES\r\nexport const FETCH_SHOW_ALL_FAVORITES_REQUEST =\r\n  'FETCH_SHOW_ALL_FAVORITES_REQUEST';\r\nexport const FETCH_SHOW_ALL_FAVORITES_SUCCESS =\r\n  'FETCH_SHOW_ALL_FAVORITES_SUCCESS';\r\nexport const FETCH_SHOW_ALL_FAVORITES_FAILURE =\r\n  'FETCH_SHOW_ALL_FAVORITES_FAILURE';\r\n\r\nexport interface RequestShowAllFavoritesAction {\r\n  type: typeof FETCH_SHOW_ALL_FAVORITES_REQUEST;\r\n}\r\nexport interface LoadShowAllFavoritesAction {\r\n  type: typeof FETCH_SHOW_ALL_FAVORITES_SUCCESS;\r\n  payload: Favorite[];\r\n}\r\nexport interface ErrorShowAllFavoritesAction {\r\n  type: typeof FETCH_SHOW_ALL_FAVORITES_FAILURE;\r\n  payload: any;\r\n}\r\n\r\n// USER FAVORITE RECIPE\r\nexport const FETCH_FAVORITE_RECIPE_REQUEST = 'FETCH_FAVORITE_RECIPE_REQUEST';\r\nexport const FETCH_FAVORITE_RECIPE_SUCCESS = 'FETCH_FAVORITE_RECIPE_SUCCESS';\r\nexport const FETCH_FAVORITE_RECIPE_FAILURE = 'FETCH_FAVORITE_RECIPE_FAILURE';\r\n\r\nexport interface RequestFavoriteRecipeAction {\r\n  type: typeof FETCH_FAVORITE_RECIPE_REQUEST;\r\n}\r\nexport interface AddFavoriteRecipeAction {\r\n  type: typeof FETCH_FAVORITE_RECIPE_SUCCESS;\r\n  payload: Favorite;\r\n}\r\nexport interface ErrorFavoriteRecipeAction {\r\n  type: typeof FETCH_FAVORITE_RECIPE_FAILURE;\r\n  payload: any;\r\n}\r\n\r\n// USER UNFAVORITE RECIPE\r\nexport const FETCH_UNFAVORITE_RECIPE_REQUEST =\r\n  'FETCH_UNFAVORITE_RECIPE_REQUEST';\r\nexport const FETCH_UNFAVORITE_RECIPE_SUCCESS =\r\n  'FETCH_UNFAVORITE_RECIPE_SUCCESS';\r\nexport const FETCH_UNFAVORITE_RECIPE_FAILURE =\r\n  'FETCH_UNFAVORITE_RECIPE_FAILURE';\r\n\r\nexport interface RequestUnfavoriteRecipeAction {\r\n  type: typeof FETCH_UNFAVORITE_RECIPE_REQUEST;\r\n  payload: string;\r\n}\r\nexport interface AddUnfavoriteRecipeAction {\r\n  type: typeof FETCH_UNFAVORITE_RECIPE_SUCCESS;\r\n  payload: boolean;\r\n}\r\nexport interface ErrorUnfavoriteRecipeAction {\r\n  type: typeof FETCH_UNFAVORITE_RECIPE_FAILURE;\r\n  payload: any;\r\n}\r\n\r\nexport type FavoriteRecipeActionTypes =\r\n  | RequestShowAllFavoritesAction\r\n  | LoadShowAllFavoritesAction\r\n  | ErrorShowAllFavoritesAction\r\n  | RequestFavoriteRecipeAction\r\n  | AddFavoriteRecipeAction\r\n  | ErrorFavoriteRecipeAction\r\n  | RequestUnfavoriteRecipeAction\r\n  | AddUnfavoriteRecipeAction\r\n  | ErrorUnfavoriteRecipeAction;\r\n","import {\r\n  FavoritesState,\r\n  FavoriteRecipeActionTypes,\r\n  FETCH_FAVORITE_RECIPE_REQUEST,\r\n  FETCH_FAVORITE_RECIPE_SUCCESS,\r\n  FETCH_FAVORITE_RECIPE_FAILURE,\r\n  FETCH_SHOW_ALL_FAVORITES_REQUEST,\r\n  FETCH_SHOW_ALL_FAVORITES_FAILURE,\r\n  FETCH_SHOW_ALL_FAVORITES_SUCCESS,\r\n  FETCH_UNFAVORITE_RECIPE_REQUEST,\r\n  FETCH_UNFAVORITE_RECIPE_SUCCESS,\r\n  FETCH_UNFAVORITE_RECIPE_FAILURE,\r\n} from './types';\r\n\r\nconst initialState: FavoritesState = {\r\n  favorites: [],\r\n  status: false,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport const favoritesReducer = (\r\n  state = initialState,\r\n  action: FavoriteRecipeActionTypes\r\n): FavoritesState => {\r\n  switch (action.type) {\r\n    case FETCH_SHOW_ALL_FAVORITES_REQUEST:\r\n      return {\r\n        favorites: [],\r\n        status: false,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case FETCH_SHOW_ALL_FAVORITES_SUCCESS:\r\n      return {\r\n        favorites: action.payload,\r\n        status: true,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    case FETCH_SHOW_ALL_FAVORITES_FAILURE:\r\n      return {\r\n        favorites: [],\r\n        status: false,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case FETCH_FAVORITE_RECIPE_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case FETCH_FAVORITE_RECIPE_SUCCESS:\r\n      return {\r\n        favorites: [...state.favorites, action.payload],\r\n        status: true,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    case FETCH_FAVORITE_RECIPE_FAILURE:\r\n      return {\r\n        favorites: [...state.favorites],\r\n        status: false,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case FETCH_UNFAVORITE_RECIPE_REQUEST:\r\n      return {\r\n        favorites: [...state.favorites],\r\n        status: false,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case FETCH_UNFAVORITE_RECIPE_SUCCESS:\r\n      return {\r\n        favorites: [...state.favorites],\r\n        status: true,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    case FETCH_UNFAVORITE_RECIPE_FAILURE:\r\n      return {\r\n        favorites: [],\r\n        status: false,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export interface Recipe {\r\n  id: string;\r\n  title: string;\r\n  serves: number;\r\n  time: number;\r\n  level: string;\r\n  description: string;\r\n  category: string;\r\n  image: string;\r\n}\r\n\r\nexport interface RecipesState {\r\n  recipes: Recipe[];\r\n  loading: boolean;\r\n  error: any;\r\n  filterText: string;\r\n  filterCategory: string;\r\n}\r\n\r\n// ALL RECIPES\r\nexport const FETCH_ALL_RECIPES_REQUEST = 'FETCH_ALL_RECIPES_REQUEST';\r\nexport const FETCH_ALL_RECIPES_SUCCESS = 'FETCH_ALL_RECIPES_SUCCESS';\r\nexport const FETCH_ALL_RECIPES_FAILURE = 'FETCH_ALL_RECIPES_FAILURE';\r\n\r\nexport interface RequestRecipesAction {\r\n  type: typeof FETCH_ALL_RECIPES_REQUEST;\r\n}\r\nexport interface LoadRecipesAction {\r\n  type: typeof FETCH_ALL_RECIPES_SUCCESS;\r\n  payload: Recipe[];\r\n}\r\nexport interface ErrorRecipesAction {\r\n  type: typeof FETCH_ALL_RECIPES_FAILURE;\r\n  payload: any;\r\n}\r\n\r\n// FILTER RECIPES\r\nexport const FILTER_RECIPES_BY_CATEGORY = 'FILTER_RECIPES_BY_CATEGORY';\r\nexport const FILTER_RECIPES_BY_TEXT = 'FILTER_RECIPES_BY_TEXT';\r\n\r\nexport interface filterByCategoryAction {\r\n  type: typeof FILTER_RECIPES_BY_CATEGORY;\r\n  payload: string;\r\n}\r\nexport interface filterByTextAction {\r\n  type: typeof FILTER_RECIPES_BY_TEXT;\r\n  payload: string;\r\n}\r\n\r\nexport type RecipesActionTypes =\r\n  | filterByCategoryAction\r\n  | filterByTextAction\r\n  | RequestRecipesAction\r\n  | LoadRecipesAction\r\n  | ErrorRecipesAction;\r\n","import {\r\n  FETCH_ALL_RECIPES_FAILURE,\r\n  FETCH_ALL_RECIPES_REQUEST,\r\n  FETCH_ALL_RECIPES_SUCCESS,\r\n  FILTER_RECIPES_BY_CATEGORY,\r\n  FILTER_RECIPES_BY_TEXT,\r\n  RecipesActionTypes,\r\n  RecipesState,\r\n} from './types';\r\n\r\nconst initialState: RecipesState = {\r\n  recipes: [],\r\n  loading: false,\r\n  error: null,\r\n  filterText: '',\r\n  filterCategory: 'All',\r\n};\r\n\r\nexport const recipesReducer = (\r\n  state = initialState,\r\n  action: RecipesActionTypes\r\n): RecipesState => {\r\n  switch (action.type) {\r\n    case FETCH_ALL_RECIPES_REQUEST:\r\n      return {\r\n        recipes: [],\r\n        loading: true,\r\n        error: null,\r\n        filterText: '',\r\n        filterCategory: 'All',\r\n      };\r\n    case FETCH_ALL_RECIPES_SUCCESS:\r\n      return {\r\n        recipes: action.payload,\r\n        loading: false,\r\n        error: null,\r\n        filterText: '',\r\n        filterCategory: 'All',\r\n      };\r\n    case FETCH_ALL_RECIPES_FAILURE:\r\n      return {\r\n        recipes: [],\r\n        loading: false,\r\n        error: action.payload,\r\n        filterText: '',\r\n        filterCategory: 'All',\r\n      };\r\n    case FILTER_RECIPES_BY_TEXT:\r\n      return {\r\n        ...state,\r\n        filterText: action.payload.trim().toLowerCase(),\r\n      };\r\n\r\n    case FILTER_RECIPES_BY_CATEGORY:\r\n      const category = action.payload;\r\n      return {\r\n        ...state,\r\n        filterCategory: category,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export interface User {\r\n  name: string;\r\n  email: string;\r\n  photoUrl: string;\r\n}\r\n\r\nexport interface UserState {\r\n  user: User | null;\r\n}\r\n\r\nexport const LOAD_USER = 'LOAD_USER';\r\n\r\nexport interface LoadUserAction {\r\n  type: typeof LOAD_USER;\r\n  payload: any;\r\n}\r\n\r\nexport type UserActionTypes = LoadUserAction;\r\n","import { LOAD_USER, UserActionTypes, UserState } from './types';\r\n\r\nconst initialState: UserState = {\r\n  user: null,\r\n};\r\n\r\nexport const userReducer = (\r\n  state = initialState,\r\n  action: UserActionTypes\r\n): UserState => {\r\n  switch (action.type) {\r\n    case LOAD_USER:\r\n      return {\r\n        user: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\n\r\nimport { favoritesReducer } from './favorites/reducer';\r\nimport { recipesReducer } from './recipes/reducer';\r\nimport { userReducer } from './user/reducer';\r\n\r\nexport const reducer = combineReducers({\r\n  user: userReducer,\r\n  recipes: recipesReducer,\r\n  favorites: favoritesReducer,\r\n});\r\n","import { applyMiddleware, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { reducer } from './reducer';\r\n\r\nlet devTools: (f: any) => any =\r\n  (window as any).__REDUX_DEVTOOLS_EXTENSION__ &&\r\n  (window as any).__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (\r\n  process.env.NODE_ENV === 'production' ||\r\n  (process as any).env.NODE_ENV === 'prod'\r\n) {\r\n  devTools = (f) => f;\r\n}\r\n\r\nexport const store = createStore(\r\n  reducer,\r\n  compose(applyMiddleware(thunk), devTools)\r\n);\r\n","import { LoadUserAction, LOAD_USER, User } from './types';\r\n\r\nexport const userLoaded = (user: User | null): LoadUserAction => ({\r\n  type: LOAD_USER,\r\n  payload: user,\r\n});\r\n","export default __webpack_public_path__ + \"static/media/search.520bbe1d.svg\";","export default __webpack_public_path__ + \"static/media/close.67aa2dae.svg\";","import './signup.scss';\r\n\r\nimport closeIcon from '../../assets/icons/close.svg';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\ninterface Props {\r\n  closePannel: () => void;\r\n}\r\n\r\nconst Signup: React.FC<Props> = ({ closePannel }) => {\r\n  const auth = firebase.auth();\r\n  const [user] = useAuthState(auth);\r\n\r\n  const signInWithGoogle = () => {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    auth.signInWithPopup(provider);\r\n  };\r\n\r\n  return (\r\n    <div className=\"signup\">\r\n      <div className=\"signup__close\">\r\n        <img src={closeIcon} alt=\"close\" onClick={closePannel} />\r\n      </div>\r\n      <button className=\"signup__btn\" onClick={signInWithGoogle}>\r\n        Sign In with Google\r\n      </button>\r\n      {user && <Redirect to=\"/\" />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import { Action } from 'redux';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport { RootState } from '../types';\r\nimport {\r\n  ErrorRecipesAction,\r\n  FETCH_ALL_RECIPES_FAILURE,\r\n  FETCH_ALL_RECIPES_REQUEST,\r\n  FETCH_ALL_RECIPES_SUCCESS,\r\n  filterByCategoryAction,\r\n  filterByTextAction,\r\n  FILTER_RECIPES_BY_CATEGORY,\r\n  FILTER_RECIPES_BY_TEXT,\r\n  LoadRecipesAction,\r\n  Recipe,\r\n  RequestRecipesAction,\r\n} from './types';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\n// ALL RECIPES\r\nexport const recipesRequested = (): RequestRecipesAction => ({\r\n  type: FETCH_ALL_RECIPES_REQUEST,\r\n});\r\nexport const recipesLoaded = (recipes: Recipe[]): LoadRecipesAction => ({\r\n  type: FETCH_ALL_RECIPES_SUCCESS,\r\n  payload: recipes,\r\n});\r\nexport const recipesError = (error: any): ErrorRecipesAction => ({\r\n  type: FETCH_ALL_RECIPES_FAILURE,\r\n  payload: error,\r\n});\r\n\r\nexport const fetchRecipes = (): ThunkAction<\r\n  void,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n> => async (dispatch) => {\r\n  dispatch(recipesRequested());\r\n  try {\r\n    const db = firebase.firestore();\r\n    const recipesRef = db.collection('recipes');\r\n    const snapshot = await recipesRef.get();\r\n    if (snapshot.empty) {\r\n      console.log('No matching documents.');\r\n    }\r\n    const recipes: Recipe[] = snapshot.docs.map((doc) => {\r\n      return {\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      } as Recipe;\r\n    });\r\n\r\n    dispatch(recipesLoaded(recipes));\r\n  } catch (err) {\r\n    dispatch(recipesError(err));\r\n  }\r\n};\r\n\r\n//FILTER RECIPES\r\nexport const filterRecipesByCategory = (\r\n  category: string\r\n): filterByCategoryAction => {\r\n  return {\r\n    type: FILTER_RECIPES_BY_CATEGORY,\r\n    payload: category,\r\n  };\r\n};\r\n\r\nexport const filterRecipesByText = (text: string): filterByTextAction => {\r\n  return {\r\n    type: FILTER_RECIPES_BY_TEXT,\r\n    payload: text,\r\n  };\r\n};\r\n","import './navbar.scss';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\n\r\nimport searchIcon from '../../assets/icons/search.svg';\r\nimport { useState } from 'react';\r\nimport Signup from '../sign-up/Signup';\r\nimport { filterRecipesByText } from '../../store/recipes/actions';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst Navbar: React.FC<{}> = () => {\r\n  const auth = firebase.auth();\r\n  const [user] = useAuthState(auth);\r\n  const [value, setValue] = useState('');\r\n\r\n  const [showSingIn, setSingIn] = useState(false);\r\n  const [showSearchPannel, setSearchPannel] = useState(false);\r\n  const [showSearch, setSearch] = useState(true);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (e: any) => {\r\n    setValue(e.target.value);\r\n  };\r\n  const handleSearch = (e: any) => {\r\n    e.preventDefault();\r\n    dispatch(filterRecipesByText(value));\r\n  };\r\n\r\n  return (\r\n    <div className=\"navbar\">\r\n      <nav className=\"navbar__wrapper\">\r\n        <p className=\"navbar__logo\">Look and cook</p>\r\n        <ul className=\"navbar__list\">\r\n          {!showSearchPannel && showSearch && (\r\n            <li className=\"navbar__item\">\r\n              <div className=\"navbar__item-search\">\r\n                <img\r\n                  className=\"navbar__item-search-ico\"\r\n                  src={searchIcon}\r\n                  alt=\"search\"\r\n                  onClick={() => setSearchPannel(true)}\r\n                />\r\n              </div>\r\n            </li>\r\n          )}\r\n          {showSearchPannel && showSearch && (\r\n            <form onSubmit={handleSearch}>\r\n              <input\r\n                className=\"navbar__search-field\"\r\n                type=\"text\"\r\n                autoComplete=\"off\"\r\n                placeholder=\"Write dish\"\r\n                value={value}\r\n                onChange={handleChange}\r\n              ></input>\r\n              <button className=\"navbar__search-btn\">Search</button>\r\n            </form>\r\n          )}\r\n          <li className=\"navbar__item\">\r\n            <Link\r\n              className=\"navbar__item-link navbar__item-link_active\"\r\n              to=\"/\"\r\n              onClick={() => setSearch(true)}\r\n            >\r\n              Recipies\r\n            </Link>\r\n          </li>\r\n          {user && (\r\n            <li className=\"navbar__item\" onClick={() => setSearch(false)}>\r\n              <Link className=\"navbar__item-link\" to=\"/profile\">\r\n                Profile\r\n              </Link>\r\n            </li>\r\n          )}\r\n\r\n          {!user && (\r\n            <Link\r\n              className=\"navbar__item-link\"\r\n              to=\"/signin\"\r\n              onClick={() => setSingIn(true)}\r\n            >\r\n              Sign In\r\n            </Link>\r\n          )}\r\n        </ul>\r\n        {showSingIn && <Signup closePannel={() => setSingIn(false)} />}\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\n\r\nimport './profile.scss';\r\n\r\nconst Profile = () => {\r\n  const auth = firebase.auth();\r\n  const [user, loading] = useAuthState(auth);\r\n\r\n  return (\r\n    <div className=\"profile\">\r\n      {loading && <p className=\"profile__loading\">Loading...</p>}\r\n      {!loading && user && (\r\n        <>\r\n          <div className=\"profile__cover\">\r\n            <img\r\n              className=\"profile__cover-img\"\r\n              src={user.photoURL}\r\n              alt=\"avatar\"\r\n            />\r\n          </div>\r\n          <div className=\"profile__description\">\r\n            <div className=\"profile__descrition-info\">\r\n              <h1 className=\"profile__name\">{user.displayName}</h1>\r\n              <p className=\"profile__recipes\">3 favorite recipes</p>\r\n            </div>\r\n            {/* <div className=\"profile__add-recipe\">\r\n            <button className=\"profile__btn\">Add recipe</button>\r\n          </div> */}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","export default __webpack_public_path__ + \"static/media/favorite.5535092f.svg\";","export default __webpack_public_path__ + \"static/media/add-favorite.96f1acaa.svg\";","import {\r\n  AddFavoriteRecipeAction,\r\n  AddUnfavoriteRecipeAction,\r\n  ErrorFavoriteRecipeAction,\r\n  ErrorShowAllFavoritesAction,\r\n  ErrorUnfavoriteRecipeAction,\r\n  Favorite,\r\n  FETCH_FAVORITE_RECIPE_FAILURE,\r\n  FETCH_FAVORITE_RECIPE_REQUEST,\r\n  FETCH_FAVORITE_RECIPE_SUCCESS,\r\n  FETCH_SHOW_ALL_FAVORITES_FAILURE,\r\n  FETCH_SHOW_ALL_FAVORITES_REQUEST,\r\n  FETCH_SHOW_ALL_FAVORITES_SUCCESS,\r\n  FETCH_UNFAVORITE_RECIPE_FAILURE,\r\n  FETCH_UNFAVORITE_RECIPE_REQUEST,\r\n  FETCH_UNFAVORITE_RECIPE_SUCCESS,\r\n  LoadShowAllFavoritesAction,\r\n  RequestFavoriteRecipeAction,\r\n  RequestShowAllFavoritesAction,\r\n  RequestUnfavoriteRecipeAction,\r\n} from './types';\r\n\r\nimport { RootState } from '../types';\r\n\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport { Action } from 'redux';\r\n\r\n// SHOW ALL FAVORITE RECIPES\r\nexport const showAllFavoritesRequested = (): RequestShowAllFavoritesAction => ({\r\n  type: FETCH_SHOW_ALL_FAVORITES_REQUEST,\r\n});\r\nexport const showAllFavoritesLoaded = (\r\n  favorites: Favorite[]\r\n): LoadShowAllFavoritesAction => ({\r\n  type: FETCH_SHOW_ALL_FAVORITES_SUCCESS,\r\n  payload: favorites,\r\n});\r\nexport const showAllFavoritesError = (\r\n  error: any\r\n): ErrorShowAllFavoritesAction => ({\r\n  type: FETCH_SHOW_ALL_FAVORITES_FAILURE,\r\n  payload: error,\r\n});\r\n\r\nexport const fetchShowAllFavorites = (\r\n  userId: string\r\n): ThunkAction<void, RootState, unknown, Action<string>> => async (\r\n  dispatch\r\n) => {\r\n  dispatch(showAllFavoritesRequested());\r\n  try {\r\n    const db = firebase.firestore();\r\n    const favoritesRef = db.collection('favorites');\r\n    const snapshot = await favoritesRef.where('user', '==', userId).get();\r\n    if (snapshot.empty) {\r\n      console.log('No matching documents.');\r\n    }\r\n    const favorites: Favorite[] = snapshot.docs.map((doc) => {\r\n      return {\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      } as Favorite;\r\n    });\r\n    dispatch(showAllFavoritesLoaded(favorites));\r\n  } catch (e) {\r\n    dispatch(showAllFavoritesError(e));\r\n  }\r\n};\r\n\r\n// ADD FAVORITE RECIPE\r\nexport const favoriteRecipeRequested = (): RequestFavoriteRecipeAction => ({\r\n  type: FETCH_FAVORITE_RECIPE_REQUEST,\r\n});\r\n\r\nexport const favoriteRecipeLoaded = (\r\n  favorite: Favorite\r\n): AddFavoriteRecipeAction => ({\r\n  type: FETCH_FAVORITE_RECIPE_SUCCESS,\r\n  payload: favorite,\r\n});\r\n\r\nexport const favoriteRecipeError = (error: any): ErrorFavoriteRecipeAction => ({\r\n  type: FETCH_FAVORITE_RECIPE_FAILURE,\r\n  payload: error,\r\n});\r\n\r\nexport const fetchAddFavorite = (\r\n  favId: string,\r\n  userId: string\r\n): ThunkAction<void, RootState, unknown, Action<string>> => async (\r\n  dispatch\r\n) => {\r\n  dispatch(favoriteRecipeRequested);\r\n  try {\r\n    const db = firebase.firestore();\r\n    const resp = await db.collection('favorites').add({\r\n      favoriteId: favId,\r\n      user: userId,\r\n    });\r\n    dispatch(\r\n      favoriteRecipeLoaded({\r\n        id: resp.id,\r\n        favoriteId: favId,\r\n        user: userId,\r\n      })\r\n    );\r\n  } catch (e) {\r\n    dispatch(favoriteRecipeError(e));\r\n  }\r\n};\r\n\r\n// DELETE FAVORITE RECIPE\r\n\r\nexport const unfavoriteRecipeRequested = (\r\n  id: string\r\n): RequestUnfavoriteRecipeAction => ({\r\n  type: FETCH_UNFAVORITE_RECIPE_REQUEST,\r\n  payload: id,\r\n});\r\nexport const unfavoriteRecipeLoaded = (\r\n  status: boolean\r\n): AddUnfavoriteRecipeAction => ({\r\n  type: FETCH_UNFAVORITE_RECIPE_SUCCESS,\r\n  payload: status,\r\n});\r\nexport const unfavoriteRecipeError = (\r\n  error: any\r\n): ErrorUnfavoriteRecipeAction => ({\r\n  type: FETCH_UNFAVORITE_RECIPE_FAILURE,\r\n  payload: error,\r\n});\r\n\r\nexport const fetchDeleteFavorite = (\r\n  id: string,\r\n  user: string\r\n): ThunkAction<void, RootState, unknown, Action<string>> => async (\r\n  dispatch\r\n) => {\r\n  dispatch(unfavoriteRecipeRequested(id));\r\n  try {\r\n    const db = firebase.firestore();\r\n    await db\r\n      .collection('favorites')\r\n      .where('favoriteId', '==', id)\r\n      .where('user', '==', user)\r\n      .get()\r\n      .then((snapshot) => {\r\n        snapshot.forEach((doc) => {\r\n          console.log(doc.id, '=>', doc.data());\r\n          db.collection('favorites').doc(doc.id).delete();\r\n        });\r\n      });\r\n    dispatch(unfavoriteRecipeLoaded(true));\r\n    dispatch(fetchShowAllFavorites(user));\r\n  } catch (e) {\r\n    dispatch(unfavoriteRecipeError(e));\r\n  }\r\n};\r\n","import './recipe-item-more.scss';\r\n\r\nimport closeIcon from '../../assets/icons/close.svg';\r\n\r\nimport { Recipe } from '../../store/recipes/types';\r\n\r\ninterface Props {\r\n  recipe: Recipe;\r\n  closeFullRecipe: () => void;\r\n}\r\n\r\nconst RecipeItemFull: React.FC<Props> = ({ recipe, closeFullRecipe }) => {\r\n  return (\r\n    <>\r\n      <div className=\"bg-items\"></div>\r\n      <div className=\"full-recipe\">\r\n        <div className=\"signup__close\">\r\n          <img src={closeIcon} alt=\"close\" onClick={() => closeFullRecipe()} />\r\n        </div>\r\n        \r\n        <div className=\"full-recipe__header\">\r\n          <div className=\"full-recipe__cover\">\r\n            <img\r\n              className=\"full-recipe__cover-img\"\r\n              src={recipe.image}\r\n              alt=\"dish\"\r\n            />\r\n          </div>\r\n          <div className=\"full-recipe__about\">\r\n            <h1 className=\"full-recipe__title\">{recipe.title}</h1>\r\n            <div className=\"full-recipe__main-info\">\r\n              <p className=\"full-recipe__time\">{recipe.time} min</p>\r\n              <p className=\"full-recipe__serves\">{recipe.serves} serves</p>\r\n              <p className=\"full-recipe__level\">Level - {recipe.level}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <p className=\"full-recipe__description\">{recipe.description}</p>\r\n        \r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RecipeItemFull;\r\n","import './recipe-item.scss';\r\n\r\nimport favIcon from '../../assets/icons/favorite.svg';\r\nimport addFavIcon from '../../assets/icons/add-favorite.svg';\r\n\r\nimport { Recipe } from '../../store/recipes/types';\r\nimport React, { useState } from 'react';\r\nimport {\r\n  fetchAddFavorite,\r\n  fetchDeleteFavorite,\r\n} from '../../store/favorites/actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { RootState } from '../../store/types';\r\n\r\nimport RecipeItemFull from '../recipe-item-more/RecipeItemFull';\r\n\r\ninterface Props {\r\n  recipe: Recipe;\r\n  favorite: boolean;\r\n}\r\n\r\nconst RecipeItem: React.FC<Props> = ({ recipe, favorite }) => {\r\n  const [showFullRecipe, setFullRecipe] = useState(false);\r\n  const [alert, setAlert] = useState(false);\r\n  \r\n  const user = useSelector(\r\n    (state) => (state as RootState).user.user\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const addFavorite = (id: string): void => {\r\n    if (user) dispatch(fetchAddFavorite(id, user.email));\r\n  };\r\n\r\n  const removeFavorite = (id: string): void => {\r\n    if (user) dispatch(fetchDeleteFavorite(id, user.email));\r\n  };\r\n  const showRecipe = () => {\r\n    setFullRecipe(true);\r\n  }\r\n  const showAlert = () => {\r\n    setAlert(true);\r\n    setTimeout(() => setAlert(false), 4000);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"recipe\">\r\n        <div className=\"recipe__cover\">\r\n          <img className=\"recipe__cover-img\" src={recipe.image} alt=\"dish\" />\r\n        </div>\r\n        {!favorite && user && (\r\n          <div className=\"recipe__favorites\">\r\n            <img\r\n              className=\"recipe__favorites-ico\"\r\n              src={addFavIcon}\r\n              alt=\"favorite\"\r\n              onClick={() => addFavorite(recipe.id)}\r\n            />\r\n          </div>\r\n        )}\r\n        {!user && (\r\n          <div className=\"recipe__favorites\">\r\n            <img\r\n              className=\"recipe__favorites-ico\"\r\n              src={addFavIcon}\r\n              alt=\"favorite\"\r\n              onClick={() => showAlert()}\r\n            />\r\n            {alert && <p className=\"recipe__alert\">You need to authorize to add favorites</p>}\r\n          </div>\r\n        )}\r\n        {favorite && user && (\r\n          <div className=\"recipe__favorites\">\r\n            <img\r\n              className=\"recipe__favorites-ico\"\r\n              src={favIcon}\r\n              alt=\"favorite\"\r\n              onClick={() => removeFavorite(recipe.id)}\r\n            />\r\n          </div>\r\n        )}\r\n        <div className=\"recipe__description\">\r\n          <h1 className=\"recipe__title\">{recipe.title}</h1>\r\n          <div className=\"recipe__main-info\">\r\n            <p className=\"recipe__time\">{recipe.time} min</p>\r\n            <p className=\"recipe__serves\">{recipe.serves} serves</p>\r\n            <p className=\"recipe__level\">Level - {recipe.level}</p>\r\n          </div>\r\n          <p className=\"recipe__text\">{recipe.description}</p>\r\n          <button className=\"recipe__btn\" onClick={() => showRecipe()}>\r\n            Show full recipe\r\n          </button>\r\n        </div>\r\n        {showFullRecipe && (\r\n          <RecipeItemFull\r\n            recipe={recipe}\r\n            closeFullRecipe={() => setFullRecipe(false)}\r\n          />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RecipeItem;\r\n","import { useEffect, useMemo } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { RootState } from '../../store/types';\r\n\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\n\r\nimport RecipeItem from '../recipe-item/RecipeItem';\r\n\r\nimport '../recipes-list/recipes.scss';\r\nimport { fetchShowAllFavorites } from '../../store/favorites/actions';\r\nimport { fetchRecipes } from '../../store/recipes/actions';\r\nimport { Recipe } from '../../store/recipes/types';\r\n\r\n\r\nconst Favorites: React.FC<{}> = () => {\r\n  const auth = firebase.auth();\r\n  const [, loading] = useAuthState(auth);\r\n  const user = useSelector(\r\n    (state) => (state as RootState).user.user\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  const allRecipes = useSelector(\r\n    (state) => (state as RootState).recipes.recipes\r\n  );\r\n\r\n  const favorites = useSelector(\r\n    (state) => (state as RootState).favorites.favorites\r\n  );\r\n\r\n  let recipes: Recipe[] = [];\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      dispatch(fetchShowAllFavorites(user.email));\r\n    }\r\n    dispatch(fetchRecipes());\r\n  }, [dispatch, user]);\r\n\r\n  recipes = useMemo(\r\n    () =>\r\n      allRecipes.filter((rec) =>\r\n        favorites.find((el) => rec.id === el.favoriteId)\r\n      ),\r\n    [allRecipes, favorites]\r\n  );\r\n\r\n  return (\r\n    <div className=\"recipes\">\r\n      {loading && <p className=\"recipes__loading\">Loading...</p>}\r\n      {!recipes.length && (\r\n        <p className=\"recipes__no-rec\" style={{ fontSize: '22px' }}>\r\n          You have no favorite recipes...\r\n        </p>\r\n      )}\r\n      {recipes.map((recipe) => {\r\n        return <RecipeItem key={recipe.id} recipe={recipe} favorite={true} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Favorites;\r\n","import { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { ProfileCategory } from '../../types';\r\n\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\n\r\nimport './categories.scss';\r\n\r\nimport { fetchRecipes } from '../../store/recipes/actions';\r\n\r\nimport { Redirect } from 'react-router-dom';\r\nimport Profile from '../profile/Profile';\r\nimport Favorites from '../favorites-list/Favorites';\r\nimport { userLoaded } from '../../store/user/actions';\r\n\r\nconst categories: ProfileCategory[] = [\r\n  { id: 1, category: 'Profile' },\r\n  { id: 2, category: 'My recipes' },\r\n  { id: 3, category: 'Favorites' },\r\n  { id: 4, category: 'Log out' },\r\n];\r\n\r\nconst Categories: React.FC<{}> = () => {\r\n  const auth = firebase.auth();\r\n  const [user, loading] = useAuthState(auth);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (!user) dispatch(fetchRecipes());\r\n  }, [user, dispatch]);\r\n\r\n  const [activeCategory, setCategory] = useState(categories[0].category);\r\n\r\n  const category = 'categories__item';\r\n  const activeCat = category + ' categories__item_active';\r\n\r\n  const categoryClass = (currentCategory: string) => {\r\n    return currentCategory === activeCategory ? activeCat : category;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"categories\">\r\n        <ul className=\"categories__list\">\r\n          <li\r\n            className={categoryClass(categories[0].category)}\r\n            onClick={() => setCategory(categories[0].category)}\r\n          >\r\n            {categories[0].category}\r\n          </li>\r\n          <li\r\n            className={categoryClass(categories[2].category)}\r\n            onClick={() => setCategory(categories[2].category)}\r\n          >\r\n            {categories[2].category}\r\n          </li>\r\n          <li\r\n            className={categoryClass(categories[3].category)}\r\n            onClick={() => {\r\n              auth.signOut().then(() => dispatch(userLoaded(null)));\r\n            }}\r\n          >\r\n            {categories[3].category}\r\n          </li>\r\n        </ul>\r\n        {!user && !loading && <Redirect to=\"/\" />}\r\n      </div>\r\n\r\n      {activeCategory === 'Profile' && <Profile />}\r\n      {activeCategory === 'Favorites' && <Favorites />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n","import Categories from '../categories/Categories';\r\nimport './profile-page.scss';\r\n\r\nconst ProfilePage = () => {\r\n  return (\r\n    <div className=\"profile-page\">\r\n      <Categories />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n","import { FoodCategory } from '../../types';\r\n\r\nexport const food: FoodCategory[] = [\r\n  { id: 0, category: 'All' },\r\n  { id: 1, category: 'Breakfast' },\r\n  { id: 2, category: 'Lunch' },\r\n  { id: 3, category: 'Soups' },\r\n  { id: 4, category: 'Salads' },\r\n  { id: 5, category: 'Dinner' },\r\n  { id: 6, category: 'Desserts' },\r\n  { id: 7, category: 'Drinks' },\r\n];\r\n","import { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { filterRecipesByCategory } from '../../store/recipes/actions';\r\n\r\nimport './categories.scss';\r\n\r\nimport { food } from './food_data';\r\n\r\nconst FoodCategories: React.FC<{}> = () => {\r\n  const [activeCategory, setCategory] = useState(food[0].category);\r\n\r\n  const category = 'categories__item';\r\n  const activeCat = category + ' categories__item_active';\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const categoryClass = (currentCategory: string) => {\r\n    return currentCategory === activeCategory ? activeCat : category;\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(filterRecipesByCategory(activeCategory));\r\n  }, [dispatch, activeCategory]);\r\n\r\n  return (\r\n    <div className=\"categories\">\r\n      <ul className=\"categories__list\">\r\n        <li\r\n          className={categoryClass(food[0].category)}\r\n          onClick={() => setCategory(food[0].category)}\r\n        >\r\n          {food[0].category}\r\n        </li>\r\n        <li\r\n          className={categoryClass(food[1].category)}\r\n          onClick={() => setCategory(food[1].category)}\r\n        >\r\n          {food[1].category}\r\n        </li>\r\n        <li\r\n          className={categoryClass(food[2].category)}\r\n          onClick={() => setCategory(food[2].category)}\r\n        >\r\n          {food[2].category}\r\n        </li>\r\n        <li\r\n          className={categoryClass(food[3].category)}\r\n          onClick={() => setCategory(food[3].category)}\r\n        >\r\n          {food[3].category}\r\n        </li>\r\n        <li\r\n          className={categoryClass(food[4].category)}\r\n          onClick={() => setCategory(food[4].category)}\r\n        >\r\n          {food[4].category}\r\n        </li>\r\n        <li\r\n          className={categoryClass(food[5].category)}\r\n          onClick={() => setCategory(food[5].category)}\r\n        >\r\n          {food[5].category}\r\n        </li>\r\n        <li\r\n          className={categoryClass(food[6].category)}\r\n          onClick={() => setCategory(food[6].category)}\r\n        >\r\n          {food[6].category}\r\n        </li>\r\n        <li\r\n          className={categoryClass(food[7].category)}\r\n          onClick={() => setCategory(food[7].category)}\r\n        >\r\n          {food[7].category}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FoodCategories;\r\n","import React, { useEffect, useMemo } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { fetchRecipes } from '../../store/recipes/actions';\r\nimport { RootState } from '../../store/types';\r\n\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\n\r\nimport RecipeItem from '../recipe-item/RecipeItem';\r\nimport FoodCategories from '../food-categories/FoodCategories';\r\n\r\nimport './recipes.scss';\r\nimport { fetchShowAllFavorites } from '../../store/favorites/actions';\r\n\r\nconst Recipes: React.FC<{}> = () => {\r\n  const auth = firebase.auth();\r\n  const [,loading] = useAuthState(auth);\r\n  const user = useSelector(\r\n    (state) => (state as RootState).user.user\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchRecipes());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (user) dispatch(fetchShowAllFavorites(user.email));\r\n  }, [user, dispatch]);\r\n\r\n  let recipes = useSelector((state) => (state as RootState).recipes.recipes);\r\n\r\n  const filterText = useSelector(\r\n    (state) => (state as RootState).recipes.filterText\r\n  );\r\n  const filterCategory = useSelector(\r\n    (state) => (state as RootState).recipes.filterCategory\r\n  );\r\n\r\n  recipes = useMemo(() => {\r\n    if (filterText === '') return recipes;\r\n\r\n    return recipes.filter((recipe) => {\r\n      return recipe.title.trim().toLowerCase().includes(filterText);\r\n    });\r\n  }, [recipes, filterText]);\r\n\r\n  recipes = useMemo(() => {\r\n    if (filterCategory === 'All') return recipes;\r\n\r\n    return recipes.filter((recipe) => {\r\n      return recipe.category === filterCategory;\r\n    });\r\n  }, [recipes, filterCategory]);\r\n\r\n  const favorites = useSelector(\r\n    (state) => (state as RootState).favorites.favorites\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div className=\"recipes\">\r\n        {loading && <p className=\"recipes__loading\">Loading...</p>}\r\n        {recipes.map((recipe) => {\r\n          let isFavorite = false;\r\n          if (favorites.length) {\r\n            favorites.forEach((favorite) => {\r\n              if (favorite.favoriteId === recipe.id) isFavorite = true;\r\n            });\r\n          }\r\n          return (\r\n            <RecipeItem key={recipe.id} recipe={recipe} favorite={isFavorite} />\r\n          );\r\n        })}\r\n      </div>\r\n      <FoodCategories />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Recipes;\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { userLoaded } from '../../store/user/actions';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport Navbar from '../navbar/Navbar';\r\nimport ProfilePage from '../profile-page/ProfilePage';\r\nimport Recipes from '../recipes-list/Recipes';\r\nimport Signup from '../sign-up/Signup';\r\n\r\nconst App: React.FC<{}> = () => {\r\n  const auth = firebase.auth();\r\n  const [user] = useAuthState(auth);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      dispatch(\r\n        userLoaded({\r\n          email: user.email,\r\n          name: user.displayName,\r\n          photoUrl: user.photoURL,\r\n        })\r\n      );\r\n    }\r\n  }, [user, dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Navbar />\r\n        <Switch>\r\n          <Route path=\"/profile\" component={ProfilePage} exact />\r\n          <Route path=\"/signin\" component={Signup} exact />\r\n          <Route path=\"/\" component={Recipes} exact />\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport firebase from 'firebase/app';\r\n\r\nimport { store } from './store/store';\r\n\r\nimport App from './components/app/App';\r\n\r\nimport './index.css';\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp({\r\n  apiKey: process.env.REACT_APP_API_KEY_FIREBASE,\r\n  authDomain: 'look-and-cook-e12b6.firebaseapp.com',\r\n  projectId: 'look-and-cook-e12b6',\r\n  storageBucket: 'look-and-cook-e12b6.appspot.com',\r\n  messagingSenderId: '355592548247',\r\n  appId: '1:355592548247:web:ed7bffbe0e2d1d34125ed2',\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}